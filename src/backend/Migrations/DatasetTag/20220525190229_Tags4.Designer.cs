// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using backend.Data;

#nullable disable

namespace backend.Migrations.DatasetTag
{
    [DbContext(typeof(DatasetTagContext))]
    [Migration("20220525190229_Tags4")]
    partial class Tags4
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("backend.Models.Dataset", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("Public")
                        .HasColumnType("boolean");

                    b.Property<int>("UserID")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Datasets");
                });

            modelBuilder.Entity("backend.Models.DatasetDatasetTag", b =>
                {
                    b.Property<int>("DatasetId")
                        .HasColumnType("integer");

                    b.Property<int>("DatasetTagId")
                        .HasColumnType("integer");

                    b.HasKey("DatasetId", "DatasetTagId");

                    b.HasIndex("DatasetTagId");

                    b.ToTable("DatasetDatasetTags");
                });

            modelBuilder.Entity("backend.Models.DatasetTag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Tag")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("backend.Models.DatasetDatasetTag", b =>
                {
                    b.HasOne("backend.Models.Dataset", "Dataset")
                        .WithMany("DatasetDatasetTags")
                        .HasForeignKey("DatasetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("backend.Models.DatasetTag", "DatasetTag")
                        .WithMany("DatasetDatasetTags")
                        .HasForeignKey("DatasetTagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dataset");

                    b.Navigation("DatasetTag");
                });

            modelBuilder.Entity("backend.Models.Dataset", b =>
                {
                    b.Navigation("DatasetDatasetTags");
                });

            modelBuilder.Entity("backend.Models.DatasetTag", b =>
                {
                    b.Navigation("DatasetDatasetTags");
                });
#pragma warning restore 612, 618
        }
    }
}
